
-- Tabellenstruktur für Tabelle `beers`

CREATE TABLE IF NOT EXISTS `bb_beers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(45) NULL,
  `img_small` varchar(45) NULL,
  `img_large` varchar(45) NULL,
  PRIMARY KEY (`id`)
) CHARSET=latin1;

-- --------------------------------------------------
-- Daten für Tabelle `beers`

INSERT INTO `bb_beers` (`id`, `name`, `img_small`, `img_large`) VALUES
(1, 'Jäcklein', NULL, NULL),
(2, 'Staropramen', NULL, NULL),
(3, 'Köstritzer Pils', NULL, NULL),
(4, 'Radeberger', NULL, NULL),
(5, 'Staro Dark', NULL, NULL),
(6, 'Köstritzer Schwarz', NULL, NULL),
(7, 'Pilsner Urquell', NULL, NULL),
(8, 'Kapuziner', NULL, NULL),
(9, 'Becks', NULL, NULL),
(10, 'Budweiser', NULL, NULL),
(11, 'Jever', NULL, NULL),
(12, 'Heineken', NULL, NULL),
(13, 'Tannenzäpfle', NULL, NULL),
(14, 'Becks Lemon', NULL, NULL),
(15, 'Bibop', NULL, NULL),
(16, 'Flensburger', NULL, NULL),
(17, 'Kellerbier', NULL, NULL),
(18, 'Murphys', NULL, NULL),
(19, 'Becks alkfrei', NULL, NULL),
(20, 'Jever Fun', NULL, NULL);

-- --------------------------------------------------
-- Tabellenstruktur für Tabelle `clubs`

CREATE TABLE IF NOT EXISTS `bb_clubs` (
  `name` varchar(45) NOT NULL,
  `description` varchar(45) NULL,
  `img_small` varchar(45) NULL,
  `img_large` varchar(45) NULL,
  `password` VARCHAR(33) NULL,
  PRIMARY KEY (`name`)
) CHARSET=latin1;

-- --------------------------------------------------
-- Daten für Tabelle `clubs`

INSERT INTO `bb_clubs` (`name`, `description`, `img_small`, `img_large`, `password`) VALUES
('BD', 'BD-Club', NULL, NULL, 'c419b06b4c6579b50ff05adb3b8424f1'),
('BC', 'BC-Club', NULL, NULL, '5360af35bde9ebd8f01f492dc059593c'),
('OUT', 'Schankwagen', NULL, NULL, 'c68271a63ddbc431c307beb7d2918275');

-- --------------------------------------------------
-- Tabellenstruktur für Tabelle `club_beers`

CREATE TABLE IF NOT EXISTS `bb_club_beers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club` varchar(45) NOT NULL,
  `beer_id` int(11) NOT NULL,
  `std_price` int(11) NULL,
  `min_price` int(11) NULL,
  `cur_price` double NULL,
  PRIMARY KEY (`id`),
  FOREIGN KEY (`club`) REFERENCES `bb_clubs`(`name`),
  FOREIGN KEY (`beer_id`) REFERENCES `bb_beers`(`id`)
) CHARSET=latin1;

-- --------------------------------------------------
-- Daten für Tabelle `club_beers`

INSERT INTO `bb_club_beers` (`id`, `club`, `beer_id`, `std_price`, `min_price`, `cur_price`) VALUES
(1, 'BD', 1, 180, 150, 180),
(2, 'BC', 1, 170, 150, 170),
(3, 'OUT', 1, 170, 150, 170),
(4, 'BD', 2, 200, 150, 200),
(5, 'BC', 3, 200, 150, 200),
(6, 'OUT', 4, 200, 150, 200),
(7, 'BD', 5, 200, 150, 200),
(8, 'BC', 6, 200, 150, 200),
(9, 'OUT', 6, 200, 150, 200),
(10, 'BD', 7, 200, 150, 200),
(11, 'BC', 7, 200, 150, 200),
(12, 'OUT', 7, 200, 150, 200),
(13, 'BD', 8, 200, 150, 200),
(14, 'BC', 8, 200, 150, 200),
(15, 'BD', 9, 200, 150, 200),
(16, 'BC', 10, 200, 150, 200),
(17, 'BD', 11, 200, 150, 200),
(18, 'BC', 11, 200, 150, 200),
(19, 'BD', 12, 160, 130, 160),
(20, 'BC', 13, 170, 130, 170),
(21, 'OUT', 14, 160, 130, 160),
(22, 'BD', 15, 160, 130, 160),
(23, 'BC', 15, 150, 130, 150),
(24, 'OUT', 15, 150, 130, 150),
(25, 'BD', 16, 160, 130, 160),
(26, 'BC', 17, 170, 150, 170),
(27, 'BD', 14, 160, 130, 160),
(28, 'BC', 18, 220, 150, 220),
(29, 'BD', 19, 200, 150, 200),
(30, 'BC', 20, 200, 150, 200);

-- --------------------------------------------------
-- Tabellenstruktur für Tabelle `events`

CREATE TABLE IF NOT EXISTS `bb_events` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `time` datetime NULL,
  `ip` int(11) NULL,
  `event` varchar(65) NULL,
  `details` varchar(65) NULL,
  PRIMARY KEY (`id`)
) CHARSET=latin1;

-- --------------------------------------------------
-- Tabellenstruktur für Tabelle `partners`

CREATE TABLE IF NOT EXISTS `bb_partners` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `beer_id` int(11) NULL,
  `partner_id` int(11) NULL,
  PRIMARY KEY (`id`),
  FOREIGN KEY (`partner_id`) REFERENCES `bb_club_beers` (`id`),
  FOREIGN KEY (`beer_id`) REFERENCES `bb_club_beers` (`id`)
) CHARSET=latin1;

-- --------------------------------------------------
-- Daten für Tabelle `partners`

INSERT INTO `bb_partners` (`id`, `beer_id`, `partner_id`) VALUES
(26, 1, 2),
(27, 1, 3),
(28, 2, 1),
(29, 2, 3),
(30, 3, 1),
(31, 3, 2),
(32, 4, 5),
(33, 4, 6),
(34, 5, 4),
(35, 5, 6),
(36, 6, 4),
(37, 6, 5),
(38, 7, 8),
(39, 7, 9),
(40, 8, 7),
(41, 8, 9),
(42, 9, 7),
(43, 9, 8),
(44, 10, 11),
(45, 10, 12),
(46, 11, 10),
(47, 11, 12),
(48, 12, 10),
(49, 12, 11),
(50, 13, 14),
(51, 14, 13),
(52, 15, 16),
(53, 16, 15),
(54, 17, 18),
(55, 18, 17),
(56, 19, 20),
(57, 19, 21),
(58, 20, 19),
(59, 20, 21),
(60, 21, 19),
(61, 21, 20),
(62, 22, 23),
(63, 22, 24),
(64, 23, 22),
(65, 23, 24),
(66, 24, 22),
(67, 24, 23),
(68, 25, 26),
(69, 26, 25),
(70, 27, 28),
(71, 28, 27),
(72, 29, 30),
(73, 30, 29);

-- --------------------------------------------------
-- Tabellenstruktur für Tabelle `prices`

CREATE TABLE IF NOT EXISTS `bb_prices` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `time` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `cur_price` double NULL,
  `clubBeers_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  FOREIGN KEY (`clubBeers_id`) REFERENCES `bb_club_beers` (`id`) 
) CHARSET=latin1;


-- --------------------------------------------------
-- Tabellenstruktur für Tabelle `sales`

CREATE TABLE IF NOT EXISTS `bb_sales` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `time` datetime NOT NULL,
  `amount` int(11) NOT NULL,
  `cur_price` int(11) NOT NULL,
  `club` VARCHAR(45) NOT NULL,
  `clubBeers_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  FOREIGN KEY (`clubBeers_id`) REFERENCES `bb_club_beers` (`id`),
  FOREIGN KEY (`club`) REFERENCES `bb_clubs` (`name`)
) CHARSET=latin1;


-- --------------------------------------------------
-- Tabellenstruktur für Tabelle `settings`

CREATE TABLE IF NOT EXISTS `bb_settings` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `max_price` int(11) NOT NULL,
  `beer_incr` float NOT NULL,
  `beer_decr` float NOT NULL,
  `club_incr` float NOT NULL,
  `club_decr` float NOT NULL,
  `equalize_decr` tinyint(1) NOT NULL,
  `time` datetime NOT NULL,
  `password` VARCHAR(33) NOT NULL,
  PRIMARY KEY (`id`)
) CHARSET=latin1;

-- --------------------------------------------------
-- Daten für Tabelle `settings`

INSERT INTO `bb_settings` (`id`, `max_price`, `beer_incr`, `beer_decr`, `club_incr`, `club_decr`, `equalize_decr`, `time`, `password`) VALUES
(1, 300, 1.02, 0.98, 1.006, 0.994, 1, '2011-05-03 15:13:12', '21232f297a57a5a743894a0e4a801fc3');



-- --------------------------------------------------
-- Struktur des Views `bd-club`

CREATE VIEW `bb_BD` AS select (round((`clubbeers`.`cur_price` / 10),0) * 10) AS `price`,`beers`.`name` AS `name`,`clubbeers`.`id` AS `id` from ((`bb_club_beers` `clubbeers` join `bb_clubs` `clubs`) join `bb_beers` `beers`) where ((`beers`.`id` = `clubbeers`.`beer_id`) and (`clubs`.`name` = `clubbeers`.`club`) and (`clubs`.`name` = 'BD'));


-- --------------------------------------------------
-- Struktur des Views `bc-club`

CREATE VIEW `bb_BC` AS select (round((`clubbeers`.`cur_price` / 10),0) * 10) AS `price`,`beers`.`name` AS `name`,`clubbeers`.`id` AS `id` from ((`bb_club_beers` `clubbeers` join `bb_clubs` `clubs`) join `bb_beers` `beers`) where ((`beers`.`id` = `clubbeers`.`beer_id`) and (`clubs`.`name` = `clubbeers`.`club`) and (`clubs`.`name` = 'BC'));


-- --------------------------------------------------
-- Struktur des Views `schankwagen`

CREATE VIEW `bb_OUT` AS select (round((`clubbeers`.`cur_price` / 10),0) * 10) AS `price`,`beers`.`name` AS `name`,`clubbeers`.`id` AS `id` from ((`bb_club_beers` `clubbeers` join `bb_clubs` `clubs`) join `bb_beers` `beers`) where ((`beers`.`id` = `clubbeers`.`beer_id`) and (`clubs`.`name` = `clubbeers`.`club`) and (`clubs`.`name` = 'OUT'));


-- --------------------------------------------------
-- Trigger `pricechange`

DROP TRIGGER IF EXISTS `bb_pricechange`;
DELIMITER //
CREATE TRIGGER `bb_pricechange` AFTER INSERT ON `bb_sales`
FOR EACH ROW BEGIN

SET @amount = LN(NEW.amount)+1;

UPDATE `bb_club_beers` AS beer, `bb_settings` AS settings 
SET beer.cur_price = beer.cur_price * POW(settings.beer_incr,@amount)
WHERE beer.id = NEW.clubBeers_id;

UPDATE `bb_club_beers` AS beer, `bb_settings` AS settings, `bb_partners` AS partners 
SET beer.cur_price = beer.cur_price * POW(POW(settings.beer_decr,1/(SELECT COUNT(*) FROM `bb_partners` WHERE partners.beer_id = NEW.clubBeers_id)),@amount)
WHERE beer.id = partners.partner_id AND partners.beer_id = NEW.clubBeers_id;

UPDATE `bb_club_beers` AS beer, `bb_settings` AS settings
SET beer.cur_price = beer.cur_price * POW(settings.club_incr,@amount)
WHERE beer.club = NEW.club;

SET @ratio =(SELECT COUNT(*)/(SELECT COUNT(*) FROM `bb_club_beers` WHERE `bb_club_beers`.club != NEW.club) FROM `bb_club_beers` WHERE `bb_club_beers`.club  = NEW.club);

UPDATE `bb_club_beers` AS beer, `bb_settings` AS settings
SET beer.cur_price = beer.cur_price * POW(POW(settings.club_decr,@ratio),@amount)
WHERE beer.club != NEW.club;

UPDATE `bb_club_beers` AS beers, `bb_settings` AS settings
SET beers.cur_price = settings.max_price 
WHERE beers.cur_price > settings.max_price;

UPDATE `bb_club_beers` AS beers
SET beers.cur_price = beers.min_price
WHERE beers.cur_price < beers.min_price;

INSERT INTO `bb_prices` (cur_price, clubBeers_id) SELECT beers.cur_price, beers.id FROM `bb_club_beers` as beers;

END;

//
DELIMITER ;


-- --------------------------------------------------
-- Trigger `event_handling`

DROP TRIGGER IF EXISTS `bb_event_handling`;
DELIMITER //
CREATE TRIGGER `bb_event_handling` AFTER INSERT ON `bb_events`
FOR EACH ROW 
BEGIN
  IF New.`event` = 'crash' THEN
    UPDATE bb_club_beers SET cur_price = min_price;
    INSERT INTO `bb_prices` (cur_price, clubBeers_id) SELECT beers.cur_price, beers.id FROM `bb_club_beers` as beers;
  END IF;
  IF New.`event` = 'reset' THEN
    UPDATE bb_club_beers SET cur_price = std_price;
    DELETE FROM bb_prices;
    DELETE FROM bb_sales;
    INSERT INTO `bb_prices` (cur_price, clubBeers_id) SELECT beers.cur_price, beers.id FROM `bb_club_beers` as beers;
  END IF;
END;
//
DELIMITER ;


-- --------------------------------------------------
-- Anfangspreise füllen
INSERT INTO `bb_prices` (cur_price, clubBeers_id) SELECT beers.cur_price, beers.id FROM `bb_club_beers` as beers;
